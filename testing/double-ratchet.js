let _crypto=null;if("object"==typeof module&&"object"==typeof module.exports)_crypto=require("tweetnacl"),_crypto.util=require("tweetnacl-util"),_crypto.auth=require("tweetnacl-auth");else if(_crypto=window.nacl,void 0===_crypto||void 0===_crypto.util||void 0===_crypto.auth)throw new Error("Your NaCl object is missing a required utility.");const doubleRatchetFunctions={MAX_SKIP:1e3,GENERATE_DH:()=>_crypto.box.keyPair(),DH:(t,e)=>_crypto.box.before(e,t.secretKey),KDF_RK:function(t,e){const i=_crypto.auth.full(e,t);return{rk:i.slice(0,32),ck:i.slice(32)}},KDF_CK:function(t){const e=_crypto.util.decodeUTF8("double-ratchet by parabirb"),i=doubleRatchetFunctions.KDF_RK(t,e);return{ck:i.ck,mk:i.rk}},ENCRYPT:function(t,e,i){const s=_crypto.auth.full(i,t),h=_crypto.randomBytes(24),o=_crypto.secretbox(e,h,t);return{mac:_crypto.util.encodeBase64(s),nonce:_crypto.util.encodeBase64(h),encrypted:_crypto.util.encodeBase64(o)}},DECRYPT:function(t,e,i){const s=_crypto.auth.full(i,t);if(!_crypto.verify(s,_crypto.util.decodeBase64(e.mac)))throw new Error("MAC could not be verified for associated data.");const h=_crypto.secretbox.open(_crypto.util.decodeBase64(e.encrypted),_crypto.util.decodeBase64(e.nonce),t);return _crypto.util.encodeUTF8(h)},HEADER:function(t,e,i){return{dh:_crypto.util.encodeBase64(t.publicKey),pn:e,n:i}},CONCAT:function(t){return _crypto.util.decodeUTF8(JSON.stringify(t))},CATMANYTHINGSPLEASE:(t,e,i)=>new Uint8Array([...t,...e,...i])};class doubleRatchet{identity(t){return this.identityKey=t,this}handshake(t){return this.handshakeKey=t,this}theirHandshake(t){return this.theirHandshakeKey=t,this}theirIdentity(t){return this.theirIdentityKey=t,this}setRole(t){return this.initiator="initiator"===t,this}async computeMasterKey(){if(this.initiator){this.sk=_crypto.hash(doubleRatchetFunctions.CATMANYTHINGSPLEASE(doubleRatchetFunctions.DH(this.identityKey,this.theirHandshakeKey),doubleRatchetFunctions.DH(this.handshakeKey,this.theirIdentityKey),doubleRatchetFunctions.DH(this.handshakeKey,this.theirHandshakeKey))),this.DHs=doubleRatchetFunctions.GENERATE_DH(),this.DHr=this.theirHandshakeKey;let t=doubleRatchetFunctions.KDF_RK(this.sk,doubleRatchetFunctions.DH(this.DHs,this.DHr));this.RK=t.rk,this.CKs=t.ck,this.CKr=this.sk}else this.sk=_crypto.hash(doubleRatchetFunctions.CATMANYTHINGSPLEASE(doubleRatchetFunctions.DH(this.handshakeKey,this.theirIdentityKey),doubleRatchetFunctions.DH(this.identityKey,this.theirHandshakeKey),doubleRatchetFunctions.DH(this.handshakeKey,this.theirHandshakeKey))),this.DHs=this.handshakeKey,this.DHr=null,this.RK=this.sk,this.CKs=this.sk,this.CKr=null;this.Ns=0,this.Nr=0,this.PN=0,this.MKSKIPPED={}}async encrypt(t){t=_crypto.util.decodeUTF8(t);let e=doubleRatchetFunctions.KDF_CK(this.CKs);this.CKs=e.ck;let i=e.mk,s=doubleRatchetFunctions.HEADER(this.DHs,this.PN,this.Ns);return this.Ns++,{header:s,ciphertext:doubleRatchetFunctions.ENCRYPT(i,t,doubleRatchetFunctions.CONCAT(s))}}TrySkippedMessageKeys(t,e){if(t.dh in this.MKSKIPPED&&t.n in this.MKSKIPPED[t.dh]){let i=this.MKSKIPPED[t.dh][t.n];return delete this.MKSKIPPED[t.dh][t.n],doubleRatchetFunctions.DECRYPT(i,e,doubleRatchetFunctions.CONCAT(t))}return!1}SkipMessageKeys(t){if(this.Nr+doubleRatchetFunctions.MAX_SKIP<t)throw new Error("until is too much");if(null!==this.CKr)for(;this.Nr<t;){let t=doubleRatchetFunctions.KDF_CK(this.CKr);this.CKr=t.ck;let e=t.mk;_crypto.util.encodeBase64(this.DHr)in this.MKSKIPPED||(this.MKSKIPPED[_crypto.util.encodeBase64(this.DHr)]={}),this.MKSKIPPED[_crypto.util.encodeBase64(this.DHr)][this.Nr]=e,this.Nr++}}DHRatchet(t){this.PN=this.Ns,this.Ns=0,this.Nr=0,this.DHr=_crypto.util.decodeBase64(t.dh);let e=doubleRatchetFunctions.KDF_RK(this.RK,doubleRatchetFunctions.DH(this.DHs,this.DHr));this.RK=e.rk,this.CKr=e.ck,this.DHs=doubleRatchetFunctions.GENERATE_DH(),e=doubleRatchetFunctions.KDF_RK(this.RK,doubleRatchetFunctions.DH(this.DHs,this.DHr)),this.RK=e.rk,this.CKs=e.ck}async decrypt(t){let e=this.TrySkippedMessageKeys(t.header,t.ciphertext);if(!1!==e)return{cleartext:e};null!==this.DHr&&t.header.dh===_crypto.util.encodeBase64(this.DHr)||(this.SkipMessageKeys(t.header.pn),this.DHRatchet(t.header)),this.SkipMessageKeys(t.header.n);let i=doubleRatchetFunctions.KDF_CK(this.CKr);this.CKr=i.ck;let s=i.mk;return this.Nr++,{cleartext:doubleRatchetFunctions.DECRYPT(s,t.ciphertext,doubleRatchetFunctions.CONCAT(t.header))}}}"object"==typeof module&&"object"==typeof module.exports?module.exports=doubleRatchet:window.secretSession=doubleRatchet;
